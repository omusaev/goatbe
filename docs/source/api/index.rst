API
===

В API реализован механизм сессий. Id сессии хранится в куке ``sessionid``.
Работа с кукой происходит по стандартному подходу:
При каждом запросе на бэкенде выставляется/обновляется кука с временем жизни.
Эту куку клиент должен посылать на сервер при каждом запросе.
Если в ответе приходит истёкшая кука(логаут), ей больше пользоваться нельзя.

API версионируется. Номер версии добавляется в урл сразу за доменом. Например ``goat.be/v1/some/method/``.

API принимает на вход данные в формате json.

API отдаёт на выход данные в формате json.

**Структура ответа**

=================  =========  ================
Parameter          Type       Description
=================  =========  ================
``status``         str        Статус ответа
``error_code``     str        Код ошибки
``error_message``  str        Сообщение ошибки
``data``           dict/list  Ответ метода
=================  =========  ================

Структура поля ``data`` описана в каждом методе.

**Возможные статусы**

=========  ===========================================================================
Status     Description
=========  ===========================================================================
``ok``     Успех. В ``data`` находится актуальный ответ запрошенного метода
``error``  Ошибка. В ``error_code`` и ``error_message`` находится информация по ошибке
=========  ===========================================================================

**Пример ответа**

.. code-block:: javascript

    {
        "status": "ok",
        "data": {
            "some_field": "some_value"
        }
    }

.. code-block:: javascript

    {
        "status": "error",
        "error_code": "SOME_ERROR_CODE",
        "error_message": "Some beautiful message"
    }

**Методы API**

.. toctree::
   :maxdepth: 2

   accounts/index.rst
   events/index.rst
   steps/index.rst
   participants/index.rst
   assignees/index.rst
   places/index.rst
   plan_items/index.rst
   feedbacks/index.rst

**Дополнительная информация по API**

.. toctree::
   :maxdepth: 2

   other/index.rst