"""models

Revision ID: 79864fcb4544
Revises: b90671508d1b
Create Date: 2017-06-18 12:08:57.279902

"""

# revision identifiers, used by Alembic.
revision = '79864fcb4544'
down_revision = 'b90671508d1b'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from geoalchemy2.types import Geography


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('name', sa.String(length=255), server_default='', nullable=False),
    sa.Column('status', sa.String(length=255), server_default='ACTIVE', nullable=False),
    sa.Column('avatar_url', sa.String(length=255), server_default='', nullable=False),
    sa.Column('auth_method', sa.String(length=255), nullable=False),
    sa.Column('identifier', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignee',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('participant_id', sa.BigInteger(), nullable=False),
    sa.Column('step_id', sa.BigInteger(), nullable=False),
    sa.Column('resolution', sa.String(length=255), server_default='OPEN', nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], [u'participant.id'], name='assignee_participant_id', ondelete='CASCADE', use_alter=True),
    sa.ForeignKeyConstraint(['step_id'], [u'step.id'], name='assignee_step_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id', 'participant_id', 'step_id')
    )
    op.create_table('event',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('title', sa.String(length=255), server_default='', nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('status', sa.String(length=32), server_default='PREPARATION', nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('finish_at', sa.DateTime(), nullable=False),
    sa.Column('secret', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('secret')
    )
    op.create_table('feedback',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('comment', sa.Text(), server_default='', nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('participant_id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name='feedback_event_id', ondelete='CASCADE', use_alter=True),
    sa.ForeignKeyConstraint(['participant_id'], [u'participant.id'], name='feedback_participant_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('account_id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(length=255), server_default='ACTIVE', nullable=False),
    sa.Column('permissions', postgresql.JSON(), nullable=True),
    sa.Column('is_owner', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], [u'account.id'], name='participant_account_id', ondelete='CASCADE', use_alter=True),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name='participant_event_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id', 'account_id', 'event_id')
    )
    op.create_table('place',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('title', sa.String(length=255), server_default='', nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('point', Geography(geometry_type='POINT', srid=4326), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('finish_at', sa.DateTime(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name='place_event_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('data', sa.PickleType(), nullable=True),
    sa.Column('expire_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('step',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u"(now() at time zone 'utc')"), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('attributes', postgresql.JSON(), server_default='{}', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('title', sa.String(length=255), server_default='', nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('type', sa.String(length=255), server_default='COMMON', nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name='step_event_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('step')
    op.drop_table('session')
    op.drop_table('place')
    op.drop_table('participant')
    op.drop_table('feedback')
    op.drop_table('event')
    op.drop_table('assignee')
    op.drop_table('account')
    ### end Alembic commands ###
